import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1744966512181 implements MigrationInterface {
    name = 'Migration1744966512181'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "loans" DROP CONSTRAINT "loans_user_id_users_id_fk"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP CONSTRAINT "loans_book_id_books_id_fk"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "reviews_user_id_users_id_fk"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "reviews_book_id_books_id_fk"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "reviews_loan_id_loans_id_fk"`);
        await queryRunner.query(`DROP INDEX "public"."loans_user_id_idx"`);
        await queryRunner.query(`DROP INDEX "public"."loans_book_id_idx"`);
        await queryRunner.query(`DROP INDEX "public"."loans_due_date_idx"`);
        await queryRunner.query(`DROP INDEX "public"."loans_status_idx"`);
        await queryRunner.query(`DROP INDEX "public"."books_title_idx"`);
        await queryRunner.query(`DROP INDEX "public"."books_author_idx"`);
        await queryRunner.query(`DROP INDEX "public"."books_isbn_idx"`);
        await queryRunner.query(`DROP INDEX "public"."books_status_idx"`);
        await queryRunner.query(`DROP INDEX "public"."reviews_user_id_idx"`);
        await queryRunner.query(`DROP INDEX "public"."reviews_book_id_idx"`);
        await queryRunner.query(`DROP INDEX "public"."reviews_loan_id_idx"`);
        await queryRunner.query(`DROP INDEX "public"."reviews_rating_idx"`);
        await queryRunner.query(`DROP INDEX "public"."users_email_idx"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "reviews_user_book_unique"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "book_id"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "booking_date"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "loan_date"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "due_date"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "return_date"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "books" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "books" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "book_id"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "loan_id"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "userId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "bookId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "bookingDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "loanDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "dueDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "returnDate" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "books" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "books" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "userId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "bookId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "loanId" integer`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "UQ_c294f2cf4480cac1b1ed092d8c5" UNIQUE ("loanId")`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."loan_status" RENAME TO "loan_status_old"`);
        await queryRunner.query(`CREATE TYPE "public"."loans_status_enum" AS ENUM('BOOKED', 'ACTIVE', 'RETURNED', 'OVERDUE')`);
        await queryRunner.query(`ALTER TABLE "loans" ALTER COLUMN "status" TYPE "public"."loans_status_enum" USING "status"::"text"::"public"."loans_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."loan_status_old"`);
        await queryRunner.query(`ALTER TYPE "public"."book_status" RENAME TO "book_status_old"`);
        await queryRunner.query(`CREATE TYPE "public"."books_status_enum" AS ENUM('AVAILABLE', 'BOOKED', 'BORROWED')`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" TYPE "public"."books_status_enum" USING "status"::"text"::"public"."books_status_enum"`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" SET DEFAULT 'AVAILABLE'`);
        await queryRunner.query(`DROP TYPE "public"."book_status_old"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "users_email_unique"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email")`);
        await queryRunner.query(`CREATE INDEX "IDX_4c2ab4e556520045a2285916d4" ON "loans" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_aad54a9134e293d4d3be70db99" ON "loans" ("bookId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2fb4f11be074fead8a1cfcbec0" ON "loans" ("dueDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_a630540e1bb9644436a2258c3d" ON "loans" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_3cd818eaf734a9d8814843f119" ON "books" ("title") `);
        await queryRunner.query(`CREATE INDEX "IDX_4675aad2c57a7a793d26afbae9" ON "books" ("author") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_54337dc30d9bb2c3fadebc6909" ON "books" ("isbn") `);
        await queryRunner.query(`CREATE INDEX "IDX_6957fe5d91c3d36aefe79e2c81" ON "books" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_7ed5659e7139fc8bc039198cc1" ON "reviews" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_cab4e55252a9c18a27e8141529" ON "reviews" ("bookId") `);
        await queryRunner.query(`CREATE INDEX "IDX_c294f2cf4480cac1b1ed092d8c" ON "reviews" ("loanId") `);
        await queryRunner.query(`CREATE INDEX "IDX_f4b88c05a7adf404a6e6b2f1eb" ON "reviews" ("rating") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_97672ac88f789774dd47f7c8be" ON "users" ("email") `);
        await queryRunner.query(`ALTER TABLE "loans" ADD CONSTRAINT "FK_4c2ab4e556520045a2285916d45" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "loans" ADD CONSTRAINT "FK_aad54a9134e293d4d3be70db995" FOREIGN KEY ("bookId") REFERENCES "books"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_7ed5659e7139fc8bc039198cc1f" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_cab4e55252a9c18a27e81415299" FOREIGN KEY ("bookId") REFERENCES "books"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_c294f2cf4480cac1b1ed092d8c5" FOREIGN KEY ("loanId") REFERENCES "loans"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_c294f2cf4480cac1b1ed092d8c5"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_cab4e55252a9c18a27e81415299"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_7ed5659e7139fc8bc039198cc1f"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP CONSTRAINT "FK_aad54a9134e293d4d3be70db995"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP CONSTRAINT "FK_4c2ab4e556520045a2285916d45"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_97672ac88f789774dd47f7c8be"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f4b88c05a7adf404a6e6b2f1eb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c294f2cf4480cac1b1ed092d8c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cab4e55252a9c18a27e8141529"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7ed5659e7139fc8bc039198cc1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6957fe5d91c3d36aefe79e2c81"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_54337dc30d9bb2c3fadebc6909"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4675aad2c57a7a793d26afbae9"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3cd818eaf734a9d8814843f119"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a630540e1bb9644436a2258c3d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2fb4f11be074fead8a1cfcbec0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aad54a9134e293d4d3be70db99"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4c2ab4e556520045a2285916d4"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying(100) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "users_email_unique" UNIQUE ("email")`);
        await queryRunner.query(`CREATE TYPE "public"."book_status_old" AS ENUM('AVAILABLE', 'BOOKED', 'BORROWED')`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" TYPE "public"."book_status_old" USING "status"::"text"::"public"."book_status_old"`);
        await queryRunner.query(`ALTER TABLE "books" ALTER COLUMN "status" SET DEFAULT 'AVAILABLE'`);
        await queryRunner.query(`DROP TYPE "public"."books_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."book_status_old" RENAME TO "book_status"`);
        await queryRunner.query(`CREATE TYPE "public"."loan_status_old" AS ENUM('BOOKED', 'ACTIVE', 'RETURNED', 'OVERDUE')`);
        await queryRunner.query(`ALTER TABLE "loans" ALTER COLUMN "status" TYPE "public"."loan_status_old" USING "status"::"text"::"public"."loan_status_old"`);
        await queryRunner.query(`DROP TYPE "public"."loans_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."loan_status_old" RENAME TO "loan_status"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "UQ_c294f2cf4480cac1b1ed092d8c5"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "loanId"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "bookId"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "books" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "books" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "returnDate"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "dueDate"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "loanDate"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "bookingDate"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "bookId"`);
        await queryRunner.query(`ALTER TABLE "loans" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "loan_id" integer`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "book_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "user_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "books" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "books" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "return_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "due_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "loan_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "booking_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "book_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "loans" ADD "user_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "reviews_user_book_unique" UNIQUE ("user_id", "book_id")`);
        await queryRunner.query(`CREATE UNIQUE INDEX "users_email_idx" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "reviews_rating_idx" ON "reviews" ("rating") `);
        await queryRunner.query(`CREATE INDEX "reviews_loan_id_idx" ON "reviews" ("loan_id") `);
        await queryRunner.query(`CREATE INDEX "reviews_book_id_idx" ON "reviews" ("book_id") `);
        await queryRunner.query(`CREATE INDEX "reviews_user_id_idx" ON "reviews" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "books_status_idx" ON "books" ("status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "books_isbn_idx" ON "books" ("isbn") `);
        await queryRunner.query(`CREATE INDEX "books_author_idx" ON "books" ("author") `);
        await queryRunner.query(`CREATE INDEX "books_title_idx" ON "books" ("title") `);
        await queryRunner.query(`CREATE INDEX "loans_status_idx" ON "loans" ("status") `);
        await queryRunner.query(`CREATE INDEX "loans_due_date_idx" ON "loans" ("due_date") `);
        await queryRunner.query(`CREATE INDEX "loans_book_id_idx" ON "loans" ("book_id") `);
        await queryRunner.query(`CREATE INDEX "loans_user_id_idx" ON "loans" ("user_id") `);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "reviews_loan_id_loans_id_fk" FOREIGN KEY ("loan_id") REFERENCES "loans"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "reviews_book_id_books_id_fk" FOREIGN KEY ("book_id") REFERENCES "books"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "reviews_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "loans" ADD CONSTRAINT "loans_book_id_books_id_fk" FOREIGN KEY ("book_id") REFERENCES "books"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "loans" ADD CONSTRAINT "loans_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
